buildscript {
    dependencies {
        classpath('com.google.cloud.tools:jib-spring-boot-extension-gradle:0.1.0')
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.spring.io/milestone" }
        mavenLocal()
        gradlePluginPortal()
    }
}
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.google.cloud.tools.jib' version '3.4.2'
}

group = 'at.mavila.utilities'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-integration'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.integration:spring-integration-http'
    implementation 'org.springframework.integration:spring-integration-jpa'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.integration:spring-integration-test'

    //Json
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.core:jackson-core'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8'
    implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names'
    implementation 'com.github.erosb:everit-json-schema:1.14.2' exclude(group: 'org.json', module: 'json')
    implementation 'org.json:json:20231013'

    //Commons
    implementation 'org.apache.commons:commons-lang3:3.12.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

def commitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim().toLowerCase()
}

jib {

    from {
        image = 'eclipse-temurin:21'
        platforms {
            platform {
                architecture = 'amd64'
                os = 'linux'
            }
        }
    }

    to {
        image = 'totopo/hours'
        tags = ["latest"]
        auth {
            username = System.getenv('DOCKER_HUB_USERNAME') ?: ''
            password = System.getenv('DOCKER_HUB_ACCESS_TOKEN') ?: ''
        }
    }

    container {
        mainClass = 'at.mavila.utilities.hours.ranges.Application'
        creationTime = 'USE_CURRENT_TIMESTAMP'
        ports = ['8384']
        labels = ['commitHash': commitHash()]
    }

    pluginExtensions {
        pluginExtension {
            implementation = 'com.google.cloud.tools.jib.gradle.extension.springboot.JibSpringBootExtension'
        }
    }

    extraDirectories.paths {
        path {
            setFrom(sourceSets.main.resources.srcDirs.find { it.name == 'resources' }.toString() + "/schemas/")
            into = "/app/data/schemas"
        }
    }
}
